plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.multiplatform'
    id 'com.github.dcendents.android-maven'
}
group = 'com.github.babel-cdm.cdmcomponents'

android {
    compileSdkVersion buildConfig.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
    }

}

kotlin {
    targets {
        fromPreset(presets.android, 'android')

        fromPreset(presets.iosX64, 'ios') {
            compilations.main.outputKinds('FRAMEWORK')
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common:${versions.kotlin}"
                implementation project(':common')
            }
        }
        commonTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test-common:${versions.kotlin}"
                implementation "org.jetbrains.kotlin:kotlin-test-annotations-common:${versions.kotlin}"
            }
        }
        androidMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"
            }
        }
        androidTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test:${versions.kotlin}"
                implementation "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}"
            }
        }
        iosMain {
            dependencies {

            }
        } 
    }
}

configurations {
    compileClasspath
}

task packForXCode(type: Sync) {
    final File frameworkDir = new File(buildDir, "xcode-frameworks")

    final String configuration = project.findProperty("CONFIGURATION")?.toUpperCase() ?: "DEBUG"
    final String arch = project.findProperty("ARCHS") ?: "x86_64"

    dependsOn kotlin.targets."ios".compilations.main.linkTaskName("FRAMEWORK", configuration)

    from { kotlin.targets."ios".compilations.main.getBinary("FRAMEWORK", configuration).parentFile }
    into frameworkDir
}

tasks.build.dependsOn packForXCode